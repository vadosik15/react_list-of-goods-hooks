{"version":3,"sources":["App.tsx","components/ListOfGoods.tsx","index.tsx"],"names":["SortType","ListOfGoods","visibleGoods","map","index","goodsFromServer","App","useState","isReversed","setReversed","NONE","sortType","setSortType","sortBy","type","isListChanged","goods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OAC1C,6BACGA,EAAaC,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SAAgCA,GAARA,SDHjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMM,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASP,EAASU,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAQMC,EAAS,SAACC,GACdF,GAAY,WACV,OAAOE,MAqBLC,EAAgBJ,IAAaX,EAASU,MAAQF,EAC9CN,EA1DD,SACLc,EADK,GAGJ,IADCL,EACF,EADEA,SAAUH,EACZ,EADYA,WAENN,EAAY,YAAOc,GAiBzB,OAfAd,EAAae,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKX,EAASoB,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKnB,EAASsB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITf,GACFN,EAAasB,UAGRtB,EAqCcuB,CACnBpB,EACA,CACEG,aACAG,aAIJ,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEZ,KAAK,SACLY,UAAWC,IACT,iBACA,CAAE,WAAYhB,IAAaX,EAASoB,WAEtCQ,QA/BqB,WAC3Bf,EAAOb,EAASoB,WAwBZ,iCAWA,wBACEN,KAAK,SACLY,UAAWC,IAAW,oBACpB,CAAE,WAAYhB,IAAaX,EAASsB,SACtCM,QA5CoB,WAC1Bf,EAAOb,EAASsB,SAuCZ,4BASA,wBACER,KAAK,SACLY,UAAWC,IAAW,oBACpB,CAAE,YAAanB,IACjBoB,QAAS,WAhEfnB,GAAY,WACV,OAAQD,MA2DN,qBASCO,GACC,wBACED,KAAK,SACLY,UAAU,4BACVE,QAtDI,WACZnB,GAAY,WACV,OAAO,KAETG,GAAY,WACV,OAAOZ,EAASU,SA8CZ,sBASJ,cAAC,EAAD,CAAaR,aAAcA,QEvIjC2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fc3c3da2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { ListOfGoods } from './components/ListOfGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reverse = () => {\n    setReversed(() => {\n      return !isReversed;\n    });\n  };\n\n  const sortBy = (type: SortType) => {\n    setSortType(() => {\n      return type;\n    });\n  };\n\n  const handlerSortByLength = () => {\n    sortBy(SortType.LENGTH);\n  };\n\n  const handlerSortByAlfavet = () => {\n    sortBy(SortType.ALPHABET);\n  };\n\n  const reset = () => {\n    setReversed(() => {\n      return false;\n    });\n    setSortType(() => {\n      return SortType.NONE;\n    });\n  };\n\n  const isListChanged = sortType !== SortType.NONE || isReversed;\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    {\n      isReversed,\n      sortType,\n    },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={handlerSortByAlfavet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={handlerSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => reverse()}\n        >\n          Reverse\n        </button>\n\n        {isListChanged && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ListOfGoods visibleGoods={visibleGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  visibleGoods: string[];\n};\n\nexport const ListOfGoods: React.FC<Props> = ({ visibleGoods }) => (\n  <ul>\n    {visibleGoods.map((index) => (\n      <li data-cy=\"Good\" key={index}>{index}</li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}